{
  "name": "galaxy-tools",
  "displayName": "Galaxy Tools",
  "description": "Galaxy Tools for Visual Studio Code - provides XML completion, lints, snippets and other smart features to develop Galaxy (https://galaxyproject.org/) tool wrappers.",
  "author": "davelopez",
  "publisher": "davelopez",
  "license": "Apache-2.0",
  "version": "0.14.1",
  "preview": true,
  "repository": {
    "type": "git",
    "url": "https://github.com/galaxyproject/galaxy-language-server"
  },
  "bugs": {
    "url": "https://github.com/galaxyproject/galaxy-language-server/issues"
  },
  "categories": [
    "Programming Languages",
    "Linters",
    "Snippets",
    "Formatters",
    "Other"
  ],
  "icon": "media/galaxy-tools-icon.png",
  "engines": {
    "vscode": "^1.52.0"
  },
  "activationEvents": [
    "onLanguage:galaxytool"
  ],
  "contributes": {
    "languages": [
      {
        "id": "galaxytool",
        "firstLine": "^<tool",
        "extensions": [
          ".xml"
        ],
        "aliases": [
          "Galaxy Tool Wrapper"
        ],
        "configuration": "./src/languages/galaxytoolxml.language-configuration.json"
      },
      {
        "id": "cheetah",
        "extensions": [
          ".tmpl"
        ],
        "configuration": "./src/languages/cheetah.language-configuration.json"
      },
      {
        "id": "restructuredtext",
        "extensions": [
          ".rst"
        ],
        "configuration": "./src/languages/restructuredtext.language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "galaxytool",
        "scopeName": "text.xml.galaxytool",
        "path": "./src/syntaxes/galaxytoolxml.tmLanguage.json",
        "embeddedLanguages": {
          "meta.embedded.block.cheetah": "cheetah",
          "meta.embedded.block.restructuredtext": "restructuredtext"
        }
      },
      {
        "language": "cheetah",
        "scopeName": "source.cheetah",
        "path": "./src/syntaxes/cheetah.tmLanguage.json"
      },
      {
        "language": "restructuredtext",
        "scopeName": "text.restructuredtext",
        "path": "./src/syntaxes/restructuredtext.tmLanguage.json"
      },
      {
        "path": "./src/syntaxes/token.injection.json",
        "scopeName": "token.injection",
        "injectTo": [
          "text.xml.galaxytool",
          "source.cheetah",
          "text.restructuredtext"
        ]
      }
    ],
    "commands": [
      {
        "command": "galaxytools.generate.tests",
        "title": "Generate tests cases for current tool",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive",
        "icon": "$(test-view-icon)"
      },
      {
        "command": "galaxytools.update.tests",
        "title": "Update existing tests cases to comply with 24.2 profile validation",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive",
        "icon": "$(test-view-icon)"
      },
      {
        "command": "galaxytools.generate.command",
        "title": "Generate boilerplate command section for current tool",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive"
      },
      {
        "command": "galaxytools.sort.singleParamAttributes",
        "title": "Sort the attributes of the param element under the cursor according to the IUC Coding Style Guide.",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive"
      },
      {
        "command": "galaxytools.sort.documentParamsAttributes",
        "title": "Sort the attributes of all the param elements in the document according to the IUC Coding Style Guidelines.",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive"
      },
      {
        "command": "galaxytools.planemo.openSettings",
        "title": "Displays the configuration settings for `planemo`.",
        "category": "Galaxy Tools: Planemo",
        "enablement": "galaxytools:isActive",
        "icon": "$(settings-gear)"
      },
      {
        "command": "galaxytools.openTerminalAtDirectory",
        "title": "Open this directory in a new terminal.",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive",
        "icon": "$(terminal-view-icon)"
      },
      {
        "command": "galaxytools.preview.expandedDocument",
        "title": "Open a preview of the tool document with all the macros expanded.",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive",
        "icon": "$(open-preview)"
      },
      {
        "command": "galaxytools.insert.paramReference",
        "title": "Insert a reference to a param element.",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive",
        "icon": "$(insert)",
        "when": "editorTextFocus"
      },
      {
        "command": "galaxytools.insert.paramFilterReference",
        "title": "Insert a reference to a param element to be used as output filter.",
        "category": "Galaxy Tools",
        "enablement": "galaxytools:isActive",
        "icon": "$(insert)",
        "when": "editorTextFocus"
      }
    ],
    "keybindings": [
      {
        "command": "galaxytools.generate.tests",
        "key": "ctrl+alt+t",
        "mac": "cmd+alt+t"
      },
      {
        "command": "galaxytools.update.tests",
        "key": "ctrl+alt+u",
        "mac": "cmd+alt+u"
      },
      {
        "command": "galaxytools.generate.command",
        "key": "ctrl+alt+c",
        "mac": "cmd+alt+c"
      },
      {
        "command": "galaxytools.sort.singleParamAttributes",
        "key": "ctrl+alt+s ctrl+alt+p",
        "mac": "cmd+alt+s cmd+alt+p"
      },
      {
        "command": "galaxytools.sort.documentParamsAttributes",
        "key": "ctrl+alt+s ctrl+alt+d",
        "mac": "cmd+alt+s cmd+alt+d"
      },
      {
        "command": "galaxytools.insert.paramReference",
        "key": "ctrl+alt+i ctrl+alt+p",
        "mac": "cmd+alt+i cmd+alt+p"
      },
      {
        "command": "galaxytools.insert.paramFilterReference",
        "key": "ctrl+alt+i ctrl+alt+f",
        "mac": "cmd+alt+i cmd+alt+f"
      }
    ],
    "configuration": {
      "type": "object",
      "title": "Galaxy Tools",
      "properties": {
        "galaxyTools.server.silentInstall": {
          "scope": "resource",
          "type": "boolean",
          "markdownDescription": "Whether to skip user confirmation to install the language server.",
          "default": false
        },
        "galaxyTools.completion.mode": {
          "scope": "resource",
          "type": "string",
          "description": "Controls the auto-completion suggestions.",
          "enum": [
            "auto",
            "invoke",
            "disabled"
          ],
          "markdownEnumDescriptions": [
            "The appropriate name of elements and attributes, depending on the context, will be automatically suggested as you type.",
            "The suggestions will appear only if you explicitly invoke them using the `trigger suggest shortcut` (usually `Ctrl + space`).",
            "No suggestions will be shown."
          ],
          "default": "auto"
        },
        "galaxyTools.completion.autoCloseTags": {
          "scope": "resource",
          "type": "boolean",
          "markdownDescription": "Controls whether to auto-insert the closing tag after typing `>` or `/`.",
          "default": true
        },
        "galaxyTools.planemo.enabled": {
          "scope": "resource",
          "type": "boolean",
          "markdownDescription": "**[Experimental]** When enabled, you can use some of the `planemo` features directly from your editor. Please set `#galaxyTools.planemo.envPath#` to be able to use `planemo`.",
          "default": true
        },
        "galaxyTools.planemo.envPath": {
          "scope": "resource",
          "type": "string",
          "markdownDescription": "If `planemo` is not on PATH you will have to provide here the full path to the `Python virtual environment` where `planemo` is installed. The path must end with `planemo` and be something like `/<full-path-to-virtual-env>/bin/planemo`.\n\n**This is required** to be able to use `planemo` features.",
          "default": "planemo"
        },
        "galaxyTools.planemo.galaxyRoot": {
          "scope": "resource",
          "type": "string",
          "markdownDescription": "The full path to the *Galaxy root directory* that will be used by `planemo`. This value will be passed to `planemo` as the parameter to `--galaxy_root`.\n\n**This is required** to be able to use *some* `planemo` features that need a `running Galaxy instance`.",
          "default": null
        },
        "galaxyTools.planemo.testing.enabled": {
          "scope": "resource",
          "type": "boolean",
          "markdownDescription": "Whether to discover and run tests using `planemo` inside the editor Test Explorer.",
          "default": true
        },
        "galaxyTools.planemo.testing.autoTestDiscoverOnSaveEnabled": {
          "scope": "resource",
          "type": "boolean",
          "markdownDescription": "Whether to try to discover new tests when a Galaxy Tool Wrapper file is saved.",
          "default": true
        },
        "galaxyTools.planemo.testing.extraParams": {
          "scope": "resource",
          "type": "string",
          "markdownDescription": "String with additional arguments that will be passed to `planemo test` command. Example: `--no_cleanup --update_test_data`",
          "default": ""
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "planemo-explorer",
          "title": "Galaxy Tools: Planemo",
          "icon": "resources/planemo.svg"
        }
      ]
    },
    "views": {
      "planemo-explorer": [
        {
          "id": "planemo-config",
          "name": "Configuration",
          "when": "galaxytools:isActive && config.galaxyTools.planemo.enabled"
        }
      ]
    },
    "menus": {
      "view/title": [
        {
          "command": "galaxytools.planemo.openSettings",
          "when": "view == planemo-config",
          "group": "navigation"
        }
      ],
      "view/item/context": [
        {
          "command": "galaxytools.openTerminalAtDirectory",
          "when": "view == planemo-config && viewItem == directoryItem",
          "group": "inline"
        }
      ]
    },
    "viewsWelcome": [
      {
        "view": "planemo-config",
        "contents": "Welcome!\nThe planemo integration with Galaxy Tools is currently in the **EXPERIMENTAL** phase. If you find any problems or want to suggest improvements please [fill an issue here](https://github.com/galaxyproject/galaxy-language-server/issues).\nIn order to use this feature you need to have planemo installed in a virtual environment and a Galaxy repo. You can find more information about installing planemo in the [planemo docs](https://planemo.readthedocs.io/en/latest/).\nTo get started...\n[Open the Planemo Settings](command:galaxytools.planemo.openSettings)\nand provide the path settings (marked as required)."
      }
    ],
    "snippets": [
      {
        "language": "galaxytool",
        "path": "./src/snippets.json"
      }
    ]
  },
  "main": "./dist/extension",
  "scripts": {
    "vscode:prepublish": "webpack --mode production",
    "webpack": "webpack --mode development",
    "watch": "webpack --mode development --watch",
    "tslint": "tslint --project tsconfig.json",
    "prettier": "prettier 'src/**/*.ts'",
    "prettier:fix": "prettier --write 'src/**/*.ts'",
    "test-compile": "tsc --project . --outDir out",
    "pretest:e2e": "webpack && npm run test-compile",
    "test:e2e": "node ./out/tests//e2e/runTests.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "^18.14.2",
    "@types/semver": "^7.5.1",
    "@types/tmp": "^0.2.3",
    "@types/vscode": "^1.52.0",
    "@typescript-eslint/eslint-plugin": "^5.53.0",
    "@typescript-eslint/parser": "^5.53.0",
    "@vscode/test-electron": "^2.3.4",
    "eslint": "^8.34.0",
    "mocha": "^10.8.2",
    "prettier": "2.8.4",
    "ts-loader": "^9.4.2",
    "typescript": "^4.9.5",
    "webpack": "^5.94.0",
    "webpack-cli": "^5.0.1"
  },
  "dependencies": {
    "iconv-lite": "^0.6.3",
    "lookpath": "^1.2.2",
    "semver": "^7.5.4",
    "tmp": "^0.2.4",
    "vscode-languageclient": "^7.0.0"
  }
}
